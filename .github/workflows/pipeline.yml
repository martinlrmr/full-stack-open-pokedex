name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  pre_deployment_tasks:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: npm install
        run: npm install
      - name: lint
        run: npm run eslint
      - name: build
        run: npm run build
      - name: test
        run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
  flyio_deployment:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: |
      github.event_name == 'push' &&
      !contains(join(toJson(github.event.commits.*.message), ' '), '#skip')
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
  tag_release:
    needs: [flyio_deployment]
    runs-on: ubuntu-20.04
    if: |
      github.event_name == 'push' && 
      !contains(join(toJson(github.event.commits.*.message), ' '), '#skip')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@eca2b69f9e2c24be7decccd0f15fdb1ea5906598
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
  a_test_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
  notification:
    needs: [flyio_deployment]
    steps:
      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          text: A new version of Pokedex deployed
          description: commit
          details: url by user broke the build :(
          footer: 'Severity: error'
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
            severity: error
            text: Build failed
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}